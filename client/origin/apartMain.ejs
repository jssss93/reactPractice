<!DOCTYPE HTML>
<!--
	Transitive by TEMPLATED
	templated.co @templatedco
	Released for free under the Creative Commons Attribution 3.0 license (templated.co/license)
-->
<html>

	<div include-html="/api/loading.html"></div>
	<head>
		<%- include('../../views/include/inc_head') %>
		
		<title>아파트 가격 확인하기 메인</title>
		<meta charset="utf-8" />
		
		<style>
			.ui-datepicker-year ,.ui-datepicker-month{height:35px;}
			.ui-datepicker .ui-datepicker-prev, .ui-datepicker .ui-datepicker-next {top:5px;}
			.ui-datepicker-trigger {margin: 0px 0px -7px 7px !important;}
			table th{text-align: center !important;cursor:pointer;}
			table td{text-align: center !important;}
		</style>


		<script>
			$(document).ready(function(){
				
				//date init
				var now =new Date();
				$("#end_dt").val(getDate(now));
				var before = new Date(now.setMonth(now.getMonth() - 3));	// 3달전
				$("#start_dt").val(getDate(before));
				
				includeHTML();//include 모듈
				getMainAddr();//시도명 init
				setTable();//데이터테이블 init
				
			});

			$(function() {
				autoComplete();
				
				$('#main_cate').on('change', function() {
					getMidAddr(this.value);
					$("#sub_cate").html('<option value=""> - 읍면동명 - </option>');
				});

				$('#mid_cate').on('change', function() {
					//alert(this.value +",,"+$("#mid_cate option:checked" ).text())
					setTable(1);
					// getAPIData('',this.value);
					getSubAddr($("#mid_cate option:checked" ).text());
				});
				$('#sub_cate').on('change', function() {
					setTable(1);
					// getAPIData(this.value,'');
				});

				$('#keyword').on('keydown', function(event) {
					if(event.keyCode == 13){
						getSearchAPIData();
					}
				});
				var before_date = "";
				$(".datepicker").datepicker({
					dateFormat: 'yy.mm.dd' //Input Display Format 변경
					,showOtherMonths: true //빈 공간에 현재월의 앞뒤월의 날짜를 표시
					,showMonthAfterYear:true //년도 먼저 나오고, 뒤에 월 표시
					,changeYear: true //콤보박스에서 년 선택 가능
					,changeMonth: true //콤보박스에서 월 선택 가능                
					,showOn: "both" //button:버튼을 표시하고,버튼을 눌러야만 달력 표시 ^ both:버튼을 표시하고,버튼을 누르거나 input을 클릭하면 달력 표시  
					,buttonImage: "/image/calendar3.png" //버튼 이미지 경로
					,buttonImageOnly: true //기본 버튼의 회색 부분을 없애고, 이미지만 보이게 함
					,buttonText: "선택" //버튼에 마우스 갖다 댔을 때 표시되는 텍스트                
					,yearSuffix: "년" //달력의 년도 부분 뒤에 붙는 텍스트
					,monthNamesShort: ['1','2','3','4','5','6','7','8','9','10','11','12'] //달력의 월 부분 텍스트
					,monthNames: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'] //달력의 월 부분 Tooltip 텍스트
					,dayNamesMin: ['일','월','화','수','목','금','토'] //달력의 요일 부분 텍스트
					,dayNames: ['일요일','월요일','화요일','수요일','목요일','금요일','토요일'] //달력의 요일 부분 Tooltip 텍스트
					,minDate: "-40Y" //최소 선택일자(-1D:하루전, -1M:한달전, -1Y:일년전)
					,maxDate: "+30Y" //최대 선택일자(+1D:하루후, -1M:한달후, -1Y:일년후)
					,beforeShow: function(input, inst) {
						before_date = $(input).val();
					}    
					,onSelect: function(dateText, inst) {
						var id = $(this).attr("id");
						var start_dt = $("#start_dt").val();
						var end_dt = $("#end_dt").val();
						
						
						if(id == "end_dt"){ //종료일선택시 시작일보다 커야한다.
							if(start_dt > $(this).val()){
								alert("종료일은 시작일보다 커야합니다.")
								$(this).datepicker('setDate', before_date);
								return false;
							}
							var now =new Date();
							if($(this).val()>getDate(now)){
								alert("현재일 이후의 데이터만 존재합니다.")
								$(this).datepicker('setDate', before_date);
							}
						}else{
							if($(this).val() > end_dt){
								alert("시작일은 종료일보다 커야합니다.")
								$(this).datepicker('setDate', before_date);
								return false;
							}
							
						}
						setTable(1);
					}
				});       



			});
			function autoComplete(){
				if($("#keyword").val().length>0){
					var availableCity = [];
					$.ajax({
						url: "/api/apart/autoComplete",
						type: "POST",
						cache: false,
						dataType: "json",
						async:false,
						data: {"sub_cate" : $("sub_cate").val(),"keyword":$("#keyword").val()},
						success: function(data){
							availableCity=[];
							if(data.length>0){
								for(var i=0;i<data.length;i++){
									var map = {value:data[i].아파트,label:data[i].아파트+" ("+data[i].법정동+")"};
									availableCity[i]=map;
								}
								$("#keyword").autocomplete({
									source: availableCity,
									select: function(event, ui) {
										$("#keyword").val(ui.item.value.split('-(')[0])
									}
								});
							}
						},
						error: function (request, status, error){
						var msg = "ERROR : " + request.status + "<br>"
						msg += + "내용 : " + request.responseText + "<br>" + error;
						console.log(msg);
						}
					});
				


					
					
				}
			}

			async function setTable(page,sortColumn){

				$(".loading_bx").show();
				
				//alert(page)
				if(page==undefined){
					page=1;
				}

				let start = new Date();  // 시작
				var prms = await setPrms(page,sortColumn)

				$.ajax({
					url: "/api/apart/getHealthCheck",
					type: "GET",
					cache: false,
					// dataType: "json",
					// data: {"main_cate" : main_cate},
					success: function(data){
						//data ==> 1 : '' = Mongo DB , 2 : '_ELS' = ElasticSearch
						$("#tb_sapce").load("/api/apart/getAPIData"+data,  prms ,function(){
						// $("#tb_sapce").load("/api/apart/getAPIData"+data , await setPrms(page,sortColumn) ,function(){
							$('#limit').on('change', function() {
								setTable(1);
							});

							let end = new Date();  // 종료
							console.log("경과시간 --->")
							console.log(end-start)
							//2011.02.01까지한 결과
							//2021.06.02 ELS -> 6400
							//MONGODB -> 9600
							
							$(".loading_bx").hide();
						});  
					},
					error: function (request, status, error){
						var msg = "ERROR : " + request.status + "<br>"
						msg += + "내용 : " + request.responseText + "<br>" + error;
						console.log(msg);
					}
				});

				
			}
			function getMainAddr(main_cate){
				//alert(main_cate)
				$.ajax({
					url: "/api/apart/getMainAddr",
					type: "GET",
					cache: false,
					dataType: "json",
					data: {"main_cate" : main_cate},
					success: function(data){
						//console.log(data)
						var str = "<option value =''> - 시도명 - </option>";
						for(var i=0;i<data.length;i++){
							str+="<option value = "+data[i].시도명+">"+data[i].시도명+"</option>"
						}
						$("#main_cate").html(str);
					},
					error: function (request, status, error){
					var msg = "ERROR : " + request.status + "<br>"
					msg += + "내용 : " + request.responseText + "<br>" + error;
					console.log(msg);
					}
				});
			}

			function getMidAddr(cate){
				$("#mid_cate").empty();
				//alert($("#main_cate").val())
				$.ajax({
					url: "/api/apart/getMidAddr",
					type: "POST",
					cache: false,
					dataType: "json",
					data: {"cate" : cate,"keyword":$("#keyword").val()},
					success: function(data){
						var str = "<option value =''> - 시군구명 - </option>";
						for(var i=0;i<data.length;i++){
							str+="<option value = '" +data[i].지역코드+ "' >"+data[i].시군구명+"</option>"
						}
						$("#mid_cate").html(str);
					},
					error: function (request, status, error){
					var msg = "ERROR : " + request.status + "<br>"
					msg += + "내용 : " + request.responseText + "<br>" + error;
					console.log(msg);
					}
				});
			}

			function getSubAddr(cate){
				
				$("#sub_cate").empty();
				//alert($("#main_cate").val())
				$.ajax({
					url: "/api/apart/getSubAddr",
					type: "POST",
					cache: false,
					dataType: "json",
					data: {"cate" : cate,"keyword":$("#keyword").val()},
					success: function(data){
						
						var str = "<option value =''> - 읍면동명 - </option>";
						for(var i=0;i<data.length;i++){
							str+="<option value = "+data[i].동리명+">"+data[i].동리명+"</option>"
						}
						$("#sub_cate").html(str);
					},
					error: function (request, status, error){
					var msg = "ERROR : " + request.status + "<br>"
					msg += + "내용 : " + request.responseText + "<br>" + error;
					console.log(msg);
					}
				});
			}

			function getAPIData(dong,code){ //prm : 동이름 , 지역코드

				$.ajax({
					url: "/api/apart/getAPIData",
					type: "POST",
					cache: false,
					dataType: "json",
					data: setPrms(),
					success: function(data){
						console.log(data)
						
						var str="";
						if(data.length>0){
							for(var i=0;i<data.length;i++){
								str +="<tr>";
								str +=	"<td>"+data[i].년+"년 "+ data[i].월+ "월 "+ data[i].일+"일</td>";
								str +=	"<td>"+data[i].법정동+"</td>";
								str +=	"<td>"+data[i].아파트+"("+data[i].전용면적+")</td>>";
								str +=	"<td>"+addComma(data[i].거래금액)+" WON</td>";
								str +=	"</tr>";
							}
						}else{
							str+="<tr><td colspan='4'>No Data.</td></tr>";
						}									
												
						$("#tbody").html(str);
						
					},
					error: function (request, status, error){
					var msg = "ERROR : " + request.status + "<br>"
					msg += + "내용 : " + request.responseText + "<br>" + error;
					console.log(msg);
					}
				});
			}


			function getSearchAPIData(){
				// if($("#keyword").val()==""){
				// 	alert("키워드를 입력해주세요");
				// 	return false;
				// }
				setTable(1);
			}
			var progressing = false;

			function mkChart(aptName,dongName,idx){
				$(".loading_bx").show();
				$(".myChart_tr").hide();

				$.ajax({
					url: "/api/apart/getChartData",
					type: "POST",
					cache: false,
					dataType: "json",
					data: {아파트:aptName,법정동:dongName,start_dt : $("#start_dt").val(),end_dt : $("#end_dt").val()},
					success: function(data){
						console.log(data)
						var labelArr = [];
						var dataAVGArr = [];
						var dataMINArr = [];
						var dataMAXArr = [];
						var dataCNTArr = [];

						for(var i=0;i<data.length;i++){
							labelArr.push(data[i]._id.substring(0,4)+'.'+data[i]._id.substring(4,6)+"("+data[i].거래건수+")건");
							dataAVGArr.push(data[i].거래금액);
							dataMINArr.push(data[i].최소거래금액);
							dataMAXArr.push(data[i].최대거래금액);
							dataCNTArr.push(data[i].거래건수);
						}
						var target = $("#cnavas_"+idx).parent().parent().parent();
						target.show();
						var ctx = target.find(".myChart")[0].getContext('2d');
						var myChart = new Chart(ctx, {
							
							type: 'line',
							data: {
								// labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
								labels:labelArr,
								datasets: [
									{
									label: '평균거래금액',
									backgroundColor: window.chartColors.red,
									borderColor: window.chartColors.red,
									data: dataAVGArr,
									fill: false,
									},
									{
									label: '최소거래금액',
									backgroundColor: window.chartColors.blue,
									borderColor: window.chartColors.blue,
									data: dataMINArr,
									fill: false,
									},
									{
									label: '최대거래금액',
									backgroundColor: window.chartColors.orange,
									borderColor: window.chartColors.orange,
									data: dataMAXArr,
									fill: false,
									}
								]
							},
							options: {
								responsive: false,
								plugins: {
									title: {
										display: true,
										text: 'Chart.js Line Chart'
									},
									tooltip: {
										mode: 'index',
										intersect: false,
									}
								},
								hover: {
									mode: 'nearest',
									intersect: true
								},
								scales: {
									x: {
										display: true,
										title: {
											display: true,
											text: 'Value'
										}
									},
									
									yAxes: 
									[
										{
											ticks: {
												beginAtZero: true,
												callback: function(value, index) {
													if(value.toString().length > 0) return ((value / 100000000).toFixed(1)).toLocaleString("ko-KR") + "억";
													// else if(value.toString().length > 4) return (Math.floor(value / 10000)).toLocaleString("ko-KR") + "만";
													else return value.toLocaleString("ko-KR");
												}
											}
										}
									]
										// display: true,
										// title: {
										// 	display: true,
										// 	text: 'Value'
										// }
									
								},
								tooltips: {
									callbacks: {
											label: function(tooltipItem, data) {
												console.log(data)
												console.log(tooltipItem)
												// var value = data.datasets[0].data[tooltipItem.index];
												var value = tooltipItem.value;
												if(value.toString().length > 0) return ((value / 100000000).toFixed(1)).toLocaleString("ko-KR") + "억";
											}
									} // end callbacks:
								},
								animation: {
									// onComplete: function(animation) {
									// 	$("#href").val(myChart.toBase64Image());
									// 	$("#imgDown").val(aptName+'('+dongName+')_Chart.png');
									// 	progressing=false;
									// },
									onProgress: function(animation) {
										$("#dongName").val(dongName);
										$("#aptName").val(aptName);
										$("#href").val(myChart.toBase64Image());
										$("#imgDown").val(aptName+'('+dongName+')_Chart_userID.png');
										progressing = true;
									},
								}
							}
						});		
						$(".loading_bx").hide();					
					},
					error: function (request, status, error){
					var msg = "ERROR : " + request.status + "<br>"
					msg += + "내용 : " + request.responseText + "<br>" + error;
					console.log(msg);
					}
				});
			}


			function setPrms(page,sortColumn){
				var prms = {};
				var dong = $("#sub_cate").val();
				if(dong!='' && dong !=undefined){
					prms.dong = dong;
				}

				var code = $("#mid_cate").val();
				if(code!='' && code !=undefined){
					prms.code = code;
				}
				var keyword = $("#keyword").val();
				if(keyword!='' && keyword !=undefined){
					prms.keyword = keyword;
				}
				prms.limit = $("#limit").val();
				prms.page = page;

				
				prms.start_dt = $("#start_dt").val();
				prms.end_dt = $("#end_dt").val();

				if(sortColumn!=undefined && $("#sortColumn").val()!=undefined){
					if(sortColumn==$("#sortColumn").val()){
						if($("#sortAlign").val()==-1){
							$("#sortAlign").val(1);
						}else{
							$("#sortAlign").val(-1);
						}
					}else{
						$("#sortColumn").val(sortColumn);
						$("#sortAlign").val(-1);
					}
					
				}
				prms.sortColumn=$("#sortColumn").val();
				prms.sortAlign=$("#sortAlign").val();
				

				console.log(prms)
				return prms;
			}

			function sendDataEmail(idx){
				$(".loading_bx").show();
				var a = document.createElement('a');
				a.href = $("#href").val();
				a.download = $("#imgDown").val();
				// a.click();
				$.ajax({
					url: "/api/apart/sendChartMail",
					type: "POST",
					cache: false,
					dataType: "json",
					data: {
							href:$("#href").val(),
							imgDown:$("#imgDown").val(),
							aptName:$("#aptName").val(),
							dongName:$("#dongName").val(),
							start_dt:$("#start_dt").val(),
							end_dt:$("#end_dt").val(),

						},
					success: function(data){
						console.log(data)
						alert("Send success to your account's E-mail")
						$(".loading_bx").hide();
						
					},
					error: function (request, status, error){
					var msg = "ERROR : " + request.status + "<br>"
					msg += + "내용 : " + request.responseText + "<br>" + error;
					console.log(msg);
					}
				});

			}

			function saveAs(uri, filename) {
				// 캡쳐된 파일을 이미지 파일로 내보낸다.
				var link = document.createElement('a');
				if (typeof link.download === 'string') {
					link.href = uri;
					link.download = filename;
					document.body.appendChild(link);
					link.click();
					document.body.removeChild(link);
				} else {
					window.open(uri);
				}
			}


		</script>
	</head>
	<body class="subpage">
<input type='hidden' id='imgDown'/>
<input type='hidden' id='href'/>
<input type='hidden' id='dongName'/>
<input type='hidden' id='aptName'/>
		<!-- Header -->
			<header id="header">
				<%- include('../../views/include/inc_header') %>
			</header>
		<!-- Nav -->
			<nav id="menu">
				<%- include('../../views/include/inc_nav') %>
			</nav>
		<!-- One -->
			<section id="one" class="wrapper style2">
				<div class="inner">
					<div class="box">
						<div class="image fit">

							<img src="/../images/apartMain.jpg" alt="" height="200px;" />
						</div>
						<div class="content">
							<header class="align-center">
								<h2>아파트 가격 확인하기</h2>
								<br>
								<!-- <p>검색조건 입력 후 검색해주세요.</p> -->
							</header>
							<form method="post" action="#">
								<div style='width:100%;'>
									<div class='addr'>
										<select name="main_cate" id="main_cate">
											<option value="">- 시도 -</option>
										</select>
									</div>
									<div class='addr'>
										<select name="mid_cate" id="mid_cate">
											<option value="">- 시군구 -</option>
										</select>
									</div>
									<div class='addr'>
										<select name="sub_cate" id="sub_cate">
											<option value="">- 동면읍 -</option>
										</select>
									</div>
									<div class='datepic'>
									<!-- <span style='color:black;'>거래일 : </span> -->
										<input type='text' class='datepic_el datepicker' id='start_dt' readonly="readonly" style='width:35%;'> ~ 
										<input type='text' class='datepic_el datepicker' id='end_dt' readonly="readonly" style='width:35%;'>
									</div>
									<div class='keyword_area'>
										<input type="text" class='keyword' name="keyword" id="keyword" value="" placeholder="ApartMent Name" onclick='autoComplete();' onkeyup='autoComplete();' />
										<input style='display:none;'type="text" name="none" id="none" value="" placeholder="Name" />
										
									</div>
									<div class='btn_div'>
										<ul class="actions">
											<li style='width:100%;'>
												<input type="button" class='search_btn' id='search' onclick='getSearchAPIData();' value="Search" />
											</li>
										</ul>
									</div>
								</div>
								<div class="row uniform">
									
									

									<!-- Break -->
									<!-- <div class="3u 12u$(xsmall)">
										<div class="select-wrapper">
											<select name="main_cate" id="main_cate">
												<option value="">- 시도 -</option>
											</select>
										</div>
									</div> -->
									<!-- <div class="3u 12u$(xsmall)">
										<div class="select-wrapper">
											
										</div>
									</div>
									<div class="3u 12u$(xsmall)">
										<div class="select-wrapper">
											
										</div>
									</div> -->
									
									<!-- <div class="7u 12u$(xsmall)"> -->
										
										
									<!-- </div> -->
									
									<!-- <div class="3u 12u$(xsmall)">
										<ul class="actions">
											<li><input type="reset" value="Reset" /></li>
										</ul>
									</div> -->
									
									
									<!-- <div class="6u 12u$(xsmall)">
										
									</div> -->
									
									<!-- Break -->
									<!-- <div class="3u$">
										
									</div> -->
									<!-- <div class="6u$">
										<div id="map" style="width:1000px;height:400px;"></div>
									</div> -->
								</div>
							</form>
							<!-- Ajax Data input Area-->
							<div id='tb_sapce'>
								
							</div>
						</div>
					</div>
				</div>
			</section>
		<!-- Four -->
			<section id="four" class="wrapper style3">
				<div class="inner">
					<header class="align-center">
						<h2>Version up plan</h2>
						<p>
							* 하이브리드 앱 개발<br>
							* 메일링 시스템 - 차트 div 화면 과 특정 데이터(아파트+법정동) 주기적으로 받아 볼 수 있도록.<br>
						</p>
					</header>
				</div>
			</section>
		<!-- Footer -->
			<footer id="footer" class="wrapper">
				<%- include('../../views/include/inc_footer') %>
			</footer>
	</body>
</html>